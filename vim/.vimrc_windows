" GVIM
if has("gui_running")
    winpos 235 235
    set lines=35 columns=118
    colorscheme desert

    "paste shortcut: Ctrl+V (Ctrl + Shfit + v)
    nmap <C-V> "+P
endif

syntax on
set nocompatible
set encoding=utf-8
set fileencoding=chinese
set fileencodings=ucs-bom,utf-8,chinese
set fileformats=unix,dos
set ambiwidth=double
set number
set autoread    "Read file when changed outside

set mouse=a
set mousehide " Hide the mouse cursor while typing
set backspace=indent,eol,start

set showcmd

set wildmode=longest,list,full " Tab completion for filenames
set wildmenu

set scrolloff=4 " Keep 4 lines off the edges of the screen when scrolling

"----------------------------------------------
" Search
set hlsearch    " Highlight search term
nnoremap <CR> :nohlsearch<CR><CR> " click Enter to cancel highlight
set ignorecase  " Do case insensitive matching
set smartcase   " No ignorecase when pattern has uppercase
set incsearch   " Highlight match while typing search pattern

" Yank from the cursor to the end of the line
nnoremap Y y$

" Visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

"----------------------------------------------
" Status line
if has('statusline')
    set laststatus=2

    " Broken down into easily includeable segments
    set laststatus=2
    set statusline=%<%f\ " Filename
    set statusline+=%w%h%m%r " Options
    set statusline+=\ [%{&ff}/%Y] " Filetype
    set statusline+=\ [%{getcwd()}] " Current dir
    set statusline+=%=%-14.(%l,%c%V%)\ %p%% " Right aligned file nav info
endif

" Tab stuff
set shiftwidth=4
set tabstop=4
set expandtab
set softtabstop=4
set autoindent

" Folding stuff
set foldnestmax=2
nnoremap <space> za
vnoremap <space> zf

filetype plugin on

"----------------------------------------------
" History
set history=1000
set undolevels=1000

" Restore cursor to file position in previous editing session
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" Copy to CLIPBOARD, install vim-gui-common first
vmap <Leader>y "+y

" Search and replace in visual mode (C-r), use register h
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

" Search for current string (C-k), use register q
vnoremap <C-k> "qy:vimgrep /<C-r>q/gj **<Left><left>

" Using git grep to do cross-branch searching, use register j
vmap <C-h> "jy:!for rev in $(git log --pretty="\%h"); do git grep <C-r>j $rev; done<CR>

" copen / cclose
map <Leader>; :copen<CR>
map <Leader>' :cclose<CR>

" Git command
map <Leader>gg :!git log --graph --date=short --pretty=format:"\%x1b[31m\%h\%x09\%x1b[32m\%d\%x1b[0m\%x20\%ad\%x1b[33m\%x20\%an\%x1b[0m\%x20\%s"<CR>
map <Leader>gl :!git log --stat --abbrev-commit --pretty=short --graph<CR>

" Change the working directory to current folder
autocmd BufEnter * lcd %:p:h

" Run python code
noremap <F5> :exec '!python' shellescape(@%, 1)<cr>

" Apply macro for highlighted lines
vmap <C-p> :norm! @a
"----------------------------------------------


" Tab switching
nmap <C-Right> :tabn<CR>
imap <C-Right> <ESC>:tabn<CR>
nmap <C-Left> :tabp<CR>
imap <C-Left> <ESC>:tabp<CR>
nmap <C-Down> :tabc<CR>
imap <C-Down> <ESC>:tabc<CR>
nmap <C-Up> :tabe<CR>
imap <C-Up> <ESC>:tabe<CR>



"----------------------------------------------
" Remove trailing whitespace and expand tab and ^M
function! Clean()
    exec 'retab'
    exec '%s/\s\+$//e'

    " use silent! to omit error message, type in ^M by Ctrl+v and Ctrl+m
    exec 'silent! %s/$//g'
endfunction
nmap cls :call Clean()<CR>
"au FileType c,java,javascript,python,xml,html,yml,mkd autocmd VimEnter * call Clean()


"----------------------------------------------
" Add color column
function! AddColorColumn()
    set colorcolumn=120
    highlight ColorColumn ctermbg=green guibg=orange
endfunction
nmap clm :call AddColorColumn()<CR>


"----------------------------------------------
" Simple Template
function! SetTmpl()
    if (&filetype == 'sh')
        normal ggi#!/bin/bash
    elseif (&filetype == 'python')
        normal ggi#!/usr/bin/env python
        put = '# -*- coding: utf-8 -*-'
    endif
    put = '#==========================================================================='
    put = '# File: ' . expand('%:t')
    put = '#'
    put = '# Ver 1.0, ' . strftime('%Y-%m-%d') . ' Wang Yaohui, Create file.'
    put = '#==========================================================================='
endfunction
nmap tpl :call SetTmpl()<CR>

" win32
if has("win32")
    source $VIMRUNTIME/delmenu.vim
    source $VIMRUNTIME/menu.vim
    language message zh_CN.utf-8
endif

"----------------------------------------------
" Show dos EOL
nmap <Leader>dos :e ++ff=unix %<CR>
